{ Git Basics Exercises. }

Create a folder called learn_git_again.
- mkdir learn_git_again

cd into the learn_git_again folder.
- cd learn_git_again

Create a file called third.txt.
- touch third.txt

Initialize an empty git repository.
- git init

Add third.txt to the staging area.
- git add third.txt

Commit with the message "adding third.txt".
- git commit -m "adding third.txt"

Check out your commit with git log.
- git log

Create another file called fourth.txt.
- touch fourth.txt

Add fourth.txt to the staging area.
- git add fourth.txt

Commit with the message "adding fourth.txt"
- git commit -m "adding fourth.txt"

Remove the third.txt file
- rm third.txt

Add this change to the staging area
- git add third.txt

Commit with the message "removing third.txt"
- git commit -m "removing third.txt"

Check out your commits using git log
- git log

Change your global setting to core.pager=cat - you can read more about that here.
- git config --global core.pager "cat"

Write the command to list all of the global configurations for git on your machine. You can type git config --global to find out how to do this
- git config --global --list


{ Branching and Merging Exercises. }

Part I
What does git clean do?
- It deletes unused files (not in staging or committed)

What do the -d and -f flags for git clean do?
- Remove untracked directories. -f forces the removal of directories which are part of another git repro

What git command creates a branch?
- git checkout -b BRANCH_NAME

What is the difference between a fast-forward and recursive merge?
- Fast forward committing can only be used when no other commit has happened since the current branch was last committed or checked out

What git command changes to another branch?
- git checkout BRANCH_NAME

How do you remove modified or deleted files from the working directory?
- git checkout FILE_NAME

What git command deletes a branch?
- git branch -D BRANCH_NAME

What does the git diff command do?
- Highlight the difference between different commits

How do you remove files from the staging area?
- git rm --cached FILE_NAME

How do merge conflicts happen?
- Different commits, committed the same files which have now different content. Git can't merge those as it doesn't know which to keep.

Part II
Create and resolve a merge conflict

mkdir git_conflict && cd git_conflict
git init
echo shjfdghsgdf > first.txt
git add .
git commit -m "first commit main branch"
git checkout -b conflict
echo ghjsgdfjhgsdfhsdhf > first.txt
git add .
git commit -m "second commit in branch"
git checkout master
git merge conflict


{ GitHub Exercises. }

Part I
Create a local repository and add and commit some files
- mkdir github_excercise && cd github_excercise && git init && echo dshfgjsdf > text.txt && git add . && git commit -m "first commit"

Create a remote repository and push your code from the local repo to the remote
- git remote add origin git@github.com:koljaschluetter/test.git
  git push -u origin master

Fork the repo https://github.com/rithmschool/git_practice - clone it and submit a pull request
-

Create a new branch locally and push it to GitHub
Submit a pull request with your new branch against the master branch on the git_practice repo.

Part II - Command Line Murder Mystery
echo "Jeremy Bowers" | $(command -v md5 || command -v md5sum) | grep -qif /dev/stdin encoded && echo CORRECT\! GREAT WORK, GUMSHOE. || echo SORRY, TRY AGAIN.
